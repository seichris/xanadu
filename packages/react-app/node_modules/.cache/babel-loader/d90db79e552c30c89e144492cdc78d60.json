{"ast":null,"code":"import { useState } from 'react';\nimport usePoller from \"./Poller.js\";\nimport axios from 'axios';\nexport default function useGasPrice(speed) {\n  const [gasPrice, setGasPrice] = useState();\n\n  const loadGasPrice = async () => {\n    axios.get('https://ethgasstation.info/json/ethgasAPI.json').then(function (response) {\n      let newGasPrice = response.data[speed ? speed : \"fast\"] * 10000000;\n\n      if (newGasPrice !== gasPrice) {\n        setGasPrice(newGasPrice);\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  usePoller(loadGasPrice, 39999);\n  return gasPrice;\n}","map":{"version":3,"sources":["C:/Users/chris/Documents/Workspace/xanadu-contracts/scaffold-eth/packages/react-app/src/hooks/GasPrice.js"],"names":["useState","usePoller","axios","useGasPrice","speed","gasPrice","setGasPrice","loadGasPrice","get","then","response","newGasPrice","data","catch","error","console","log"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACzC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,EAAxC;;AACA,QAAMO,YAAY,GAAG,YAAY;AAC/BL,IAAAA,KAAK,CAACM,GAAN,CAAU,gDAAV,EACCC,IADD,CACM,UAAUC,QAAV,EAAoB;AACxB,UAAIC,WAAW,GAAGD,QAAQ,CAACE,IAAT,CAAcR,KAAK,GAACA,KAAD,GAAO,MAA1B,IAAkC,QAApD;;AACA,UAAGO,WAAW,KAAGN,QAAjB,EAA0B;AACxBC,QAAAA,WAAW,CAACK,WAAD,CAAX;AACD;AACF,KAND,EAOCE,KAPD,CAOO,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KATD;AAUD,GAXD;;AAYAb,EAAAA,SAAS,CAACM,YAAD,EAAc,KAAd,CAAT;AACA,SAAOF,QAAP;AACD","sourcesContent":["import { useState } from 'react';\r\nimport usePoller from \"./Poller.js\";\r\nimport axios from 'axios';\r\nexport default function useGasPrice(speed) {\r\n  const [gasPrice, setGasPrice] = useState();\r\n  const loadGasPrice = async () => {\r\n    axios.get('https://ethgasstation.info/json/ethgasAPI.json')\r\n    .then(function (response) {\r\n      let newGasPrice = response.data[speed?speed:\"fast\"]*10000000\r\n      if(newGasPrice!==gasPrice){\r\n        setGasPrice(newGasPrice);\r\n      }\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    })\r\n  }\r\n  usePoller(loadGasPrice,39999)\r\n  return gasPrice\r\n}\r\n"]},"metadata":{},"sourceType":"module"}