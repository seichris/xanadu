{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport usePoller from \"./Poller.js\";\nimport useBlockNumber from \"./BlockNumber.js\";\nexport default function useTimestamp(provider, pollTime) {\n  const blockNumber = useBlockNumber(provider, pollTime);\n  const [timestamp, setTimestamp] = useState();\n  useEffect(() => {\n    if (typeof provider !== \"undefined\") {\n      async function getTimestamp() {\n        let nextBlock = await provider.getBlock(blockNumber);\n        const nextTimestamp = nextBlock.timestamp;\n\n        if (nextTimestamp !== timestamp) {\n          setTimestamp(nextTimestamp);\n        }\n      }\n\n      getTimestamp();\n    }\n  }, [provider, blockNumber]);\n  return timestamp;\n}","map":{"version":3,"sources":["C:/Users/chris/Documents/Workspace/xanadu-contracts/scaffold-eth/packages/react-app/src/hooks/Timestamp.js"],"names":["useState","useEffect","usePoller","useBlockNumber","useTimestamp","provider","pollTime","blockNumber","timestamp","setTimestamp","getTimestamp","nextBlock","getBlock","nextTimestamp"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,eAAe,SAASC,YAAT,CAAsBC,QAAtB,EAA+BC,QAA/B,EAAyC;AAEtD,QAAMC,WAAW,GAAGJ,cAAc,CAACE,QAAD,EAAUC,QAAV,CAAlC;AAEA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,EAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAG,OAAOI,QAAP,KAAoB,WAAvB,EAAmC;AACjC,qBAAeK,YAAf,GAA8B;AAC5B,YAAIC,SAAS,GAAG,MAAMN,QAAQ,CAACO,QAAT,CAAkBL,WAAlB,CAAtB;AACA,cAAMM,aAAa,GAAGF,SAAS,CAACH,SAAhC;;AACA,YAAGK,aAAa,KAAGL,SAAnB,EAA6B;AAC3BC,UAAAA,YAAY,CAACI,aAAD,CAAZ;AACD;AACF;;AACDH,MAAAA,YAAY;AACb;AACF,GAXQ,EAWN,CAACL,QAAD,EAAUE,WAAV,CAXM,CAAT;AAaA,SAAOC,SAAP;AACD","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport usePoller from \"./Poller.js\";\r\nimport useBlockNumber from \"./BlockNumber.js\";\r\n\r\nexport default function useTimestamp(provider,pollTime) {\r\n\r\n  const blockNumber = useBlockNumber(provider,pollTime)\r\n\r\n  const [timestamp, setTimestamp] = useState()\r\n\r\n  useEffect(() => {\r\n    if(typeof provider !== \"undefined\"){\r\n      async function getTimestamp() {\r\n        let nextBlock = await provider.getBlock(blockNumber)\r\n        const nextTimestamp = nextBlock.timestamp\r\n        if(nextTimestamp!==timestamp){\r\n          setTimestamp(nextTimestamp)\r\n        }\r\n      }\r\n      getTimestamp();\r\n    }\r\n  }, [provider,blockNumber]);\r\n\r\n  return timestamp;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}