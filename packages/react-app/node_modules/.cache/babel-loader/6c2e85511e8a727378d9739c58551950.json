{"ast":null,"code":"import SturdyWebSocket from 'sturdy-websocket';\nimport CryptoEs from 'crypto-es';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nfunction __generator(thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n}\n\nfunction createEmitter() {\n  return {\n    listeners: {},\n    on: function (eventCode, listener) {\n      // check if valid eventCode\n      switch (eventCode) {\n        case 'txSent':\n        case 'txPool':\n        case 'txConfirmed':\n        case 'txSpeedUp':\n        case 'txCancel':\n        case 'txFailed':\n        case 'all':\n          break;\n\n        default:\n          throw new Error(eventCode + \" is not a valid event code, for a list of valid event codes see: https://github.com/blocknative/sdk\");\n      } // check that listener is a function\n\n\n      if (typeof listener !== 'function') {\n        throw new Error('Listener must be a function');\n      } // add listener for the eventCode\n\n\n      this.listeners[eventCode] = listener;\n    },\n    emit: function (state) {\n      if (this.listeners[state.eventCode]) {\n        return this.listeners[state.eventCode](state);\n      }\n\n      if (this.listeners.all) {\n        return this.listeners.all(state);\n      }\n    }\n  };\n}\n\nfunction networkName(id) {\n  switch (id) {\n    case 1:\n      return 'main';\n\n    case 3:\n      return 'ropsten';\n\n    case 4:\n      return 'rinkeby';\n\n    case 5:\n      return 'goerli';\n\n    case 42:\n      return 'kovan';\n\n    default:\n      return 'local';\n  }\n}\n\nfunction serverEcho(eventCode) {\n  switch (eventCode) {\n    case 'txRequest':\n    case 'nsfFail':\n    case 'txRepeat':\n    case 'txAwaitingApproval':\n    case 'txConfirmReminder':\n    case 'txSendFail':\n    case 'txError':\n    case 'txUnderPriced':\n    case 'txSent':\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nfunction last(arr) {\n  return arr.reverse()[0];\n}\n\nfunction validateType(options) {\n  var name = options.name,\n      value = options.value,\n      type = options.type,\n      optional = options.optional,\n      customValidation = options.customValidation;\n\n  if (!optional && typeof value === 'undefined') {\n    throw new Error(\"\\\"\" + name + \"\\\" is required\");\n  }\n\n  if (typeof value !== 'undefined' && (type === 'array' ? Array.isArray(type) : typeof value !== type)) {\n    throw new Error(\"\\\"\" + name + \"\\\" must be of type: \" + type + \", received type: \" + typeof value + \" from value: \" + value);\n  }\n\n  if (typeof value !== 'undefined' && customValidation && !customValidation(value)) {\n    throw new Error(\"\\\"\" + value + \"\\\" is not a valid \\\"\" + name + \"\\\"\");\n  }\n}\n\nfunction validateOptions(options) {\n  validateType({\n    name: 'sdk options',\n    value: options,\n    type: 'object'\n  });\n  var dappId = options.dappId,\n      name = options.name,\n      networkId = options.networkId,\n      transactionHandlers = options.transactionHandlers,\n      apiUrl = options.apiUrl,\n      ws = options.ws;\n  validateType({\n    name: 'dappId',\n    value: dappId,\n    type: 'string'\n  });\n  validateType({\n    name: 'name',\n    value: name,\n    type: 'string',\n    optional: true\n  });\n  validateType({\n    name: 'networkId',\n    value: networkId,\n    type: 'number'\n  });\n  validateType({\n    name: 'transactionHandler',\n    value: transactionHandlers,\n    type: 'array',\n    optional: true\n  });\n\n  if (transactionHandlers) {\n    transactionHandlers.forEach(function (handler) {\n      return validateType({\n        name: 'transactionHandler',\n        value: handler,\n        type: 'function'\n      });\n    });\n  }\n\n  validateType({\n    name: 'apiUrl',\n    value: apiUrl,\n    type: 'string',\n    optional: true\n  });\n  validateType({\n    name: 'ws',\n    value: ws,\n    type: 'function',\n    optional: true\n  });\n}\n\nfunction validateTransaction(hash, id) {\n  validateType({\n    name: 'hash',\n    value: hash,\n    type: 'string',\n    customValidation: validTxHash\n  });\n  validateType({\n    name: 'id',\n    value: id,\n    type: 'string',\n    optional: true\n  });\n}\n\nfunction validateAccount(address) {\n  validateType({\n    name: 'address',\n    value: address,\n    type: 'string'\n  });\n}\n\nfunction validateUnsubscribe(addressOrHash) {\n  validateType({\n    name: 'addressOrHash',\n    value: addressOrHash,\n    type: 'string'\n  });\n}\n\nfunction validateEvent(eventObj) {\n  validateType({\n    name: 'eventObj',\n    value: eventObj,\n    type: 'object'\n  });\n  var eventCode = eventObj.eventCode,\n      categoryCode = eventObj.categoryCode,\n      transaction = eventObj.transaction,\n      wallet = eventObj.wallet,\n      contract = eventObj.contract;\n  validateType({\n    name: 'eventCode',\n    value: eventCode,\n    type: 'string'\n  });\n  validateType({\n    name: 'categoryCode',\n    value: categoryCode,\n    type: 'string'\n  });\n  validateType({\n    name: 'transaction',\n    value: transaction,\n    type: 'object',\n    optional: true\n  });\n\n  if (transaction) {\n    var id = transaction.id,\n        to = transaction.to,\n        from = transaction.from,\n        value = transaction.value,\n        gas = transaction.gas,\n        gasPrice = transaction.gasPrice,\n        nonce = transaction.nonce,\n        status_1 = transaction.status,\n        startTime = transaction.startTime;\n    validateType({\n      name: 'id',\n      value: id,\n      type: 'string',\n      optional: true\n    });\n    validateType({\n      name: 'to',\n      value: to,\n      type: 'string',\n      optional: true,\n      customValidation: isAddress\n    });\n    validateType({\n      name: 'from',\n      value: from,\n      type: 'string',\n      optional: true,\n      customValidation: isAddress\n    });\n    validateType({\n      name: 'value',\n      value: value,\n      type: 'string',\n      optional: true\n    });\n    validateType({\n      name: 'gas',\n      value: gas,\n      type: 'string',\n      optional: true\n    });\n    validateType({\n      name: 'gasPrice',\n      value: gasPrice,\n      type: 'string',\n      optional: true\n    });\n    validateType({\n      name: 'nonce',\n      value: nonce,\n      type: 'number',\n      optional: true\n    });\n    validateType({\n      name: 'status',\n      value: status_1,\n      type: 'string',\n      optional: true\n    });\n    validateType({\n      name: 'startTime',\n      value: startTime,\n      type: 'number',\n      optional: true\n    });\n  }\n\n  validateType({\n    name: 'wallet',\n    value: wallet,\n    type: 'object',\n    optional: true\n  });\n\n  if (wallet) {\n    var balance = wallet.balance;\n    validateType({\n      name: 'balance',\n      value: balance,\n      type: 'string',\n      optional: true\n    });\n  }\n\n  validateType({\n    name: 'contract',\n    value: contract,\n    type: 'object',\n    optional: true\n  });\n\n  if (contract) {\n    var methodName = contract.methodName,\n        parameters = contract.parameters;\n    validateType({\n      name: 'methodName',\n      value: methodName,\n      type: 'string',\n      optional: true\n    });\n    validateType({\n      name: 'parameters',\n      value: parameters,\n      type: 'array',\n      optional: true\n    });\n  }\n}\n\nfunction isAddress(address) {\n  return /^(0x)?[0-9a-fA-F]{40}$/.test(address);\n}\n\nfunction validTxHash(hash) {\n  return /^0x([A-Fa-f0-9]{64})$/.test(hash);\n}\n\nfunction transaction(hash, id) {\n  validateTransaction(hash, id); // create startTime for transaction\n\n  var startTime = Date.now(); // create emitter for transaction\n\n  var emitter = createEmitter(); // create eventCode for transaction\n\n  var eventCode = 'txSent'; // put in queue\n\n  this._watchedTransactions.push({\n    hash: hash,\n    emitter: emitter\n  });\n\n  var transaction = {\n    hash: hash,\n    id: id || hash,\n    startTime: startTime,\n    status: 'sent'\n  };\n\n  var newState = __assign(__assign({}, transaction), {\n    eventCode: eventCode\n  }); // logEvent to server\n\n\n  this._sendMessage({\n    eventCode: eventCode,\n    categoryCode: 'activeTransaction',\n    transaction: transaction\n  });\n\n  var transactionObj = {\n    details: transaction,\n    emitter: emitter\n  };\n\n  function emitState() {\n    var emitterResult = emitter.emit(newState);\n\n    this._transactionHandlers.forEach(function (handler) {\n      return handler({\n        transaction: newState,\n        emitterResult: emitterResult\n      });\n    });\n  } // emit after delay to allow for listener to be registered\n\n\n  setTimeout(emitState.bind(this), 5);\n  return transactionObj;\n}\n\nfunction account(address) {\n  validateAccount(address); // lowercase the address\n\n  address = address.toLowerCase(); // create emitter for transaction\n\n  var emitter = createEmitter(); // create eventCode for transaction\n\n  var eventCode = 'accountAddress';\n\n  var existingAddressWatcher = this._watchedAccounts.find(function (ac) {\n    return ac.address === address;\n  });\n\n  if (existingAddressWatcher) {\n    // add to existing emitters array\n    existingAddressWatcher.emitters.push(emitter);\n  } else {\n    // put in accounts queue\n    this._watchedAccounts.push({\n      address: address,\n      emitters: [emitter]\n    });\n  } // logEvent to server\n\n\n  this._sendMessage({\n    eventCode: eventCode,\n    categoryCode: 'watch',\n    account: {\n      address: address\n    }\n  });\n\n  return {\n    emitter: emitter,\n    details: {\n      address: address\n    }\n  };\n}\n\nfunction event(eventObj) {\n  validateEvent(eventObj);\n\n  this._sendMessage(eventObj);\n}\n\nfunction unsubscribe(addressOrHash) {\n  validateUnsubscribe(addressOrHash);\n\n  if (isAddress(addressOrHash)) {\n    var normalizedAddress = addressOrHash.toLowerCase(); // remove address from accounts\n\n    this._watchedAccounts = this._watchedAccounts.filter(function (ac) {\n      return ac.address !== addressOrHash;\n    }); // logEvent to server\n\n    this._sendMessage({\n      eventCode: 'accountAddress',\n      categoryCode: 'unwatch',\n      account: {\n        address: normalizedAddress\n      }\n    });\n  } else if (validTxHash(addressOrHash)) {\n    // remove transaction from transactions\n    this._watchedTransactions = this._watchedTransactions.filter(function (tx) {\n      return tx.hash !== addressOrHash;\n    }); // logEvent to server\n\n    this._sendMessage({\n      eventCode: 'activeTransaction',\n      categoryCode: 'unwatch',\n      transaction: {\n        hash: addressOrHash,\n        id: addressOrHash,\n        status: 'unsubscribed'\n      }\n    });\n  } else {\n    throw new Error(\"Error trying to unsubscribe \" + addressOrHash + \": not a valid address or transaction hash\");\n  }\n}\n\nvar version = \"2.0.0\";\n\nfunction sendMessage(msg) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!!this._connected) return [3\n          /*break*/\n          , 2];\n          return [4\n          /*yield*/\n          , waitForConnectionOpen.bind(this)()];\n\n        case 1:\n          _a.sent();\n\n          _a.label = 2;\n\n        case 2:\n          this._socket.send(createEventLog.bind(this)(msg));\n\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nfunction waitForConnectionOpen() {\n  var _this = this;\n\n  return new Promise(function (resolve) {\n    var interval = setInterval(function () {\n      if (_this._connected) {\n        setTimeout(resolve, 100);\n        clearInterval(interval);\n      }\n    });\n  });\n}\n\nfunction handleMessage(msg) {\n  var _a = JSON.parse(msg.data),\n      status = _a.status,\n      reason = _a.reason,\n      event = _a.event,\n      connectionId = _a.connectionId;\n\n  if (connectionId) {\n    if (typeof window !== 'undefined') {\n      window.localStorage.setItem(this._storageKey, connectionId);\n    }\n\n    this._connectionId = connectionId;\n  } // handle any errors from the server\n\n\n  if (status === 'error') {\n    if (reason.includes('not a valid API key')) {\n      var errorObj = new Error(reason);\n      throw errorObj;\n    }\n\n    if (reason.includes('network not supported')) {\n      var errorObj = new Error(reason);\n      throw errorObj;\n    }\n\n    if (reason.includes('maximum allowed amount')) {\n      var errorObj = new Error(reason);\n      throw errorObj;\n    }\n  }\n\n  if (event && event.transaction) {\n    var transaction_1 = event.transaction,\n        eventCode = event.eventCode,\n        contractCall = event.contractCall; // flatten in to one object\n\n    var newState_1 = __assign(__assign({}, transaction_1), {\n      eventCode: eventCode,\n      contractCall: contractCall\n    }); // ignore server echo and unsubscribe messages\n\n\n    if (serverEcho(eventCode) || transaction_1.status === 'unsubscribed') {\n      return;\n    } // handle change of hash in speedup and cancel events\n\n\n    if (eventCode === 'txSpeedUp' || eventCode === 'txCancel') {\n      this._watchedTransactions = this._watchedTransactions.map(function (tx) {\n        if (tx.hash === transaction_1.originalHash) {\n          // reassign hash parameter in transaction queue to new hash\n          tx.hash = transaction_1.hash;\n        }\n\n        return tx;\n      });\n    }\n\n    var watchedAddress_1 = transaction_1.watchedAddress && transaction_1.watchedAddress.toLowerCase();\n\n    if (watchedAddress_1) {\n      var accountObj = this._watchedAccounts.find(function (ac) {\n        return ac.address === watchedAddress_1;\n      });\n\n      var emitterResult_1 = accountObj ? last(accountObj.emitters.map(function (emitter) {\n        return emitter.emit(newState_1);\n      })) : false;\n\n      this._transactionHandlers.forEach(function (handler) {\n        return handler({\n          transaction: newState_1,\n          emitterResult: emitterResult_1\n        });\n      });\n    } else {\n      var transactionObj = this._watchedTransactions.find(function (tx) {\n        return tx.hash === transaction_1.hash;\n      });\n\n      var emitterResult_2 = transactionObj && transactionObj.emitter.emit(newState_1);\n\n      this._transactionHandlers.forEach(function (handler) {\n        return handler({\n          transaction: newState_1,\n          emitterResult: emitterResult_2\n        });\n      });\n    }\n  }\n}\n\nfunction createEventLog(msg) {\n  return JSON.stringify(__assign({\n    timeStamp: new Date(),\n    dappId: this._dappId,\n    version: version,\n    blockchain: {\n      system: 'ethereum',\n      network: networkName(this._networkId)\n    }\n  }, msg));\n}\n\nvar DEFAULT_NAME = 'unknown';\n\nvar Blocknative =\n/** @class */\nfunction () {\n  function Blocknative(options) {\n    validateOptions(options);\n    var dappId = options.dappId,\n        _a = options.name,\n        name = _a === void 0 ? DEFAULT_NAME : _a,\n        networkId = options.networkId,\n        _b = options.transactionHandlers,\n        transactionHandlers = _b === void 0 ? [] : _b,\n        apiUrl = options.apiUrl,\n        ws = options.ws;\n    var socket = new SturdyWebSocket(apiUrl || 'wss://api.blocknative.com/v0', ws ? {\n      wsConstructor: ws\n    } : {});\n    socket.onopen = onOpen.bind(this);\n    socket.ondown = onDown.bind(this);\n    socket.onreopen = onReopen.bind(this);\n    socket.onmessage = handleMessage.bind(this);\n    var storageKey = CryptoEs.SHA1(dappId + \" - \" + name).toString();\n    var storedConnectionId = typeof window !== 'undefined' && window.localStorage.getItem(storageKey);\n    this._storageKey = storageKey;\n    this._connectionId = storedConnectionId || undefined;\n    this._dappId = dappId;\n    this._networkId = networkId;\n    this._transactionHandlers = transactionHandlers;\n    this._socket = socket;\n    this._connected = false;\n    this._sendMessage = sendMessage.bind(this);\n    this._watchedTransactions = [];\n    this._watchedAccounts = []; // public API\n\n    this.transaction = transaction.bind(this);\n    this.account = account.bind(this);\n    this.event = event.bind(this);\n    this.unsubscribe = unsubscribe.bind(this);\n  }\n\n  return Blocknative;\n}();\n\nfunction onOpen() {\n  this._connected = true;\n\n  this._sendMessage({\n    categoryCode: 'initialize',\n    eventCode: 'checkDappId',\n    connectionId: this._connectionId\n  });\n}\n\nfunction onDown() {\n  this._connected = false;\n}\n\nfunction onReopen() {\n  var _this = this;\n\n  this._connected = true;\n\n  this._sendMessage({\n    categoryCode: 'initialize',\n    eventCode: 'checkDappId',\n    connectionId: this._connectionId\n  }); // re-register all accounts to be watched by server upon\n  // re-connection as they don't get transferred over automatically\n  // to the new connection like tx hashes do\n\n\n  this._watchedAccounts.forEach(function (account) {\n    _this._sendMessage({\n      eventCode: 'accountAddress',\n      categoryCode: 'watch',\n      account: {\n        address: account.address\n      }\n    });\n  });\n}\n\nexport default Blocknative;","map":{"version":3,"sources":["C:/Users/chris/Documents/Workspace/xanadu-contracts/scaffold-eth/node_modules/bnc-sdk/dist/bnc-sdk.esm.js"],"names":["SturdyWebSocket","CryptoEs","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","pop","push","createEmitter","listeners","on","eventCode","listener","Error","emit","state","all","networkName","id","serverEcho","last","arr","reverse","validateType","options","name","type","optional","customValidation","Array","isArray","validateOptions","dappId","networkId","transactionHandlers","apiUrl","ws","forEach","handler","validateTransaction","hash","validTxHash","validateAccount","address","validateUnsubscribe","addressOrHash","validateEvent","eventObj","categoryCode","transaction","wallet","contract","to","from","gas","gasPrice","nonce","status_1","status","startTime","isAddress","balance","methodName","parameters","test","Date","now","emitter","_watchedTransactions","newState","_sendMessage","transactionObj","details","emitState","emitterResult","_transactionHandlers","setTimeout","bind","account","toLowerCase","existingAddressWatcher","_watchedAccounts","find","ac","emitters","event","unsubscribe","normalizedAddress","filter","tx","version","sendMessage","msg","_a","_connected","waitForConnectionOpen","_socket","send","createEventLog","_this","interval","setInterval","clearInterval","handleMessage","JSON","parse","data","reason","connectionId","window","localStorage","setItem","_storageKey","_connectionId","includes","errorObj","transaction_1","contractCall","newState_1","map","originalHash","watchedAddress_1","watchedAddress","accountObj","emitterResult_1","emitterResult_2","stringify","timeStamp","_dappId","blockchain","system","network","_networkId","DEFAULT_NAME","Blocknative","_b","socket","wsConstructor","onopen","onOpen","ondown","onDown","onreopen","onReopen","onmessage","storageKey","SHA1","toString","storedConnectionId","getItem","undefined"],"mappings":"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","sourcesContent":["import SturdyWebSocket from 'sturdy-websocket';\nimport CryptoEs from 'crypto-es';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nfunction __generator(thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n}\n\nfunction createEmitter() {\n  return {\n    listeners: {},\n    on: function (eventCode, listener) {\n      // check if valid eventCode\n      switch (eventCode) {\n        case 'txSent':\n        case 'txPool':\n        case 'txConfirmed':\n        case 'txSpeedUp':\n        case 'txCancel':\n        case 'txFailed':\n        case 'all':\n          break;\n\n        default:\n          throw new Error(eventCode + \" is not a valid event code, for a list of valid event codes see: https://github.com/blocknative/sdk\");\n      } // check that listener is a function\n\n\n      if (typeof listener !== 'function') {\n        throw new Error('Listener must be a function');\n      } // add listener for the eventCode\n\n\n      this.listeners[eventCode] = listener;\n    },\n    emit: function (state) {\n      if (this.listeners[state.eventCode]) {\n        return this.listeners[state.eventCode](state);\n      }\n\n      if (this.listeners.all) {\n        return this.listeners.all(state);\n      }\n    }\n  };\n}\n\nfunction networkName(id) {\n  switch (id) {\n    case 1:\n      return 'main';\n\n    case 3:\n      return 'ropsten';\n\n    case 4:\n      return 'rinkeby';\n\n    case 5:\n      return 'goerli';\n\n    case 42:\n      return 'kovan';\n\n    default:\n      return 'local';\n  }\n}\n\nfunction serverEcho(eventCode) {\n  switch (eventCode) {\n    case 'txRequest':\n    case 'nsfFail':\n    case 'txRepeat':\n    case 'txAwaitingApproval':\n    case 'txConfirmReminder':\n    case 'txSendFail':\n    case 'txError':\n    case 'txUnderPriced':\n    case 'txSent':\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nfunction last(arr) {\n  return arr.reverse()[0];\n}\n\nfunction validateType(options) {\n  var name = options.name,\n      value = options.value,\n      type = options.type,\n      optional = options.optional,\n      customValidation = options.customValidation;\n\n  if (!optional && typeof value === 'undefined') {\n    throw new Error(\"\\\"\" + name + \"\\\" is required\");\n  }\n\n  if (typeof value !== 'undefined' && (type === 'array' ? Array.isArray(type) : typeof value !== type)) {\n    throw new Error(\"\\\"\" + name + \"\\\" must be of type: \" + type + \", received type: \" + typeof value + \" from value: \" + value);\n  }\n\n  if (typeof value !== 'undefined' && customValidation && !customValidation(value)) {\n    throw new Error(\"\\\"\" + value + \"\\\" is not a valid \\\"\" + name + \"\\\"\");\n  }\n}\n\nfunction validateOptions(options) {\n  validateType({\n    name: 'sdk options',\n    value: options,\n    type: 'object'\n  });\n  var dappId = options.dappId,\n      name = options.name,\n      networkId = options.networkId,\n      transactionHandlers = options.transactionHandlers,\n      apiUrl = options.apiUrl,\n      ws = options.ws;\n  validateType({\n    name: 'dappId',\n    value: dappId,\n    type: 'string'\n  });\n  validateType({\n    name: 'name',\n    value: name,\n    type: 'string',\n    optional: true\n  });\n  validateType({\n    name: 'networkId',\n    value: networkId,\n    type: 'number'\n  });\n  validateType({\n    name: 'transactionHandler',\n    value: transactionHandlers,\n    type: 'array',\n    optional: true\n  });\n\n  if (transactionHandlers) {\n    transactionHandlers.forEach(function (handler) {\n      return validateType({\n        name: 'transactionHandler',\n        value: handler,\n        type: 'function'\n      });\n    });\n  }\n\n  validateType({\n    name: 'apiUrl',\n    value: apiUrl,\n    type: 'string',\n    optional: true\n  });\n  validateType({\n    name: 'ws',\n    value: ws,\n    type: 'function',\n    optional: true\n  });\n}\n\nfunction validateTransaction(hash, id) {\n  validateType({\n    name: 'hash',\n    value: hash,\n    type: 'string',\n    customValidation: validTxHash\n  });\n  validateType({\n    name: 'id',\n    value: id,\n    type: 'string',\n    optional: true\n  });\n}\n\nfunction validateAccount(address) {\n  validateType({\n    name: 'address',\n    value: address,\n    type: 'string'\n  });\n}\n\nfunction validateUnsubscribe(addressOrHash) {\n  validateType({\n    name: 'addressOrHash',\n    value: addressOrHash,\n    type: 'string'\n  });\n}\n\nfunction validateEvent(eventObj) {\n  validateType({\n    name: 'eventObj',\n    value: eventObj,\n    type: 'object'\n  });\n  var eventCode = eventObj.eventCode,\n      categoryCode = eventObj.categoryCode,\n      transaction = eventObj.transaction,\n      wallet = eventObj.wallet,\n      contract = eventObj.contract;\n  validateType({\n    name: 'eventCode',\n    value: eventCode,\n    type: 'string'\n  });\n  validateType({\n    name: 'categoryCode',\n    value: categoryCode,\n    type: 'string'\n  });\n  validateType({\n    name: 'transaction',\n    value: transaction,\n    type: 'object',\n    optional: true\n  });\n\n  if (transaction) {\n    var id = transaction.id,\n        to = transaction.to,\n        from = transaction.from,\n        value = transaction.value,\n        gas = transaction.gas,\n        gasPrice = transaction.gasPrice,\n        nonce = transaction.nonce,\n        status_1 = transaction.status,\n        startTime = transaction.startTime;\n    validateType({\n      name: 'id',\n      value: id,\n      type: 'string',\n      optional: true\n    });\n    validateType({\n      name: 'to',\n      value: to,\n      type: 'string',\n      optional: true,\n      customValidation: isAddress\n    });\n    validateType({\n      name: 'from',\n      value: from,\n      type: 'string',\n      optional: true,\n      customValidation: isAddress\n    });\n    validateType({\n      name: 'value',\n      value: value,\n      type: 'string',\n      optional: true\n    });\n    validateType({\n      name: 'gas',\n      value: gas,\n      type: 'string',\n      optional: true\n    });\n    validateType({\n      name: 'gasPrice',\n      value: gasPrice,\n      type: 'string',\n      optional: true\n    });\n    validateType({\n      name: 'nonce',\n      value: nonce,\n      type: 'number',\n      optional: true\n    });\n    validateType({\n      name: 'status',\n      value: status_1,\n      type: 'string',\n      optional: true\n    });\n    validateType({\n      name: 'startTime',\n      value: startTime,\n      type: 'number',\n      optional: true\n    });\n  }\n\n  validateType({\n    name: 'wallet',\n    value: wallet,\n    type: 'object',\n    optional: true\n  });\n\n  if (wallet) {\n    var balance = wallet.balance;\n    validateType({\n      name: 'balance',\n      value: balance,\n      type: 'string',\n      optional: true\n    });\n  }\n\n  validateType({\n    name: 'contract',\n    value: contract,\n    type: 'object',\n    optional: true\n  });\n\n  if (contract) {\n    var methodName = contract.methodName,\n        parameters = contract.parameters;\n    validateType({\n      name: 'methodName',\n      value: methodName,\n      type: 'string',\n      optional: true\n    });\n    validateType({\n      name: 'parameters',\n      value: parameters,\n      type: 'array',\n      optional: true\n    });\n  }\n}\n\nfunction isAddress(address) {\n  return /^(0x)?[0-9a-fA-F]{40}$/.test(address);\n}\n\nfunction validTxHash(hash) {\n  return /^0x([A-Fa-f0-9]{64})$/.test(hash);\n}\n\nfunction transaction(hash, id) {\n  validateTransaction(hash, id); // create startTime for transaction\n\n  var startTime = Date.now(); // create emitter for transaction\n\n  var emitter = createEmitter(); // create eventCode for transaction\n\n  var eventCode = 'txSent'; // put in queue\n\n  this._watchedTransactions.push({\n    hash: hash,\n    emitter: emitter\n  });\n\n  var transaction = {\n    hash: hash,\n    id: id || hash,\n    startTime: startTime,\n    status: 'sent'\n  };\n\n  var newState = __assign(__assign({}, transaction), {\n    eventCode: eventCode\n  }); // logEvent to server\n\n\n  this._sendMessage({\n    eventCode: eventCode,\n    categoryCode: 'activeTransaction',\n    transaction: transaction\n  });\n\n  var transactionObj = {\n    details: transaction,\n    emitter: emitter\n  };\n\n  function emitState() {\n    var emitterResult = emitter.emit(newState);\n\n    this._transactionHandlers.forEach(function (handler) {\n      return handler({\n        transaction: newState,\n        emitterResult: emitterResult\n      });\n    });\n  } // emit after delay to allow for listener to be registered\n\n\n  setTimeout(emitState.bind(this), 5);\n  return transactionObj;\n}\n\nfunction account(address) {\n  validateAccount(address); // lowercase the address\n\n  address = address.toLowerCase(); // create emitter for transaction\n\n  var emitter = createEmitter(); // create eventCode for transaction\n\n  var eventCode = 'accountAddress';\n\n  var existingAddressWatcher = this._watchedAccounts.find(function (ac) {\n    return ac.address === address;\n  });\n\n  if (existingAddressWatcher) {\n    // add to existing emitters array\n    existingAddressWatcher.emitters.push(emitter);\n  } else {\n    // put in accounts queue\n    this._watchedAccounts.push({\n      address: address,\n      emitters: [emitter]\n    });\n  } // logEvent to server\n\n\n  this._sendMessage({\n    eventCode: eventCode,\n    categoryCode: 'watch',\n    account: {\n      address: address\n    }\n  });\n\n  return {\n    emitter: emitter,\n    details: {\n      address: address\n    }\n  };\n}\n\nfunction event(eventObj) {\n  validateEvent(eventObj);\n\n  this._sendMessage(eventObj);\n}\n\nfunction unsubscribe(addressOrHash) {\n  validateUnsubscribe(addressOrHash);\n\n  if (isAddress(addressOrHash)) {\n    var normalizedAddress = addressOrHash.toLowerCase(); // remove address from accounts\n\n    this._watchedAccounts = this._watchedAccounts.filter(function (ac) {\n      return ac.address !== addressOrHash;\n    }); // logEvent to server\n\n    this._sendMessage({\n      eventCode: 'accountAddress',\n      categoryCode: 'unwatch',\n      account: {\n        address: normalizedAddress\n      }\n    });\n  } else if (validTxHash(addressOrHash)) {\n    // remove transaction from transactions\n    this._watchedTransactions = this._watchedTransactions.filter(function (tx) {\n      return tx.hash !== addressOrHash;\n    }); // logEvent to server\n\n    this._sendMessage({\n      eventCode: 'activeTransaction',\n      categoryCode: 'unwatch',\n      transaction: {\n        hash: addressOrHash,\n        id: addressOrHash,\n        status: 'unsubscribed'\n      }\n    });\n  } else {\n    throw new Error(\"Error trying to unsubscribe \" + addressOrHash + \": not a valid address or transaction hash\");\n  }\n}\n\nvar version = \"2.0.0\";\n\nfunction sendMessage(msg) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!!this._connected) return [3\n          /*break*/\n          , 2];\n          return [4\n          /*yield*/\n          , waitForConnectionOpen.bind(this)()];\n\n        case 1:\n          _a.sent();\n\n          _a.label = 2;\n\n        case 2:\n          this._socket.send(createEventLog.bind(this)(msg));\n\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nfunction waitForConnectionOpen() {\n  var _this = this;\n\n  return new Promise(function (resolve) {\n    var interval = setInterval(function () {\n      if (_this._connected) {\n        setTimeout(resolve, 100);\n        clearInterval(interval);\n      }\n    });\n  });\n}\n\nfunction handleMessage(msg) {\n  var _a = JSON.parse(msg.data),\n      status = _a.status,\n      reason = _a.reason,\n      event = _a.event,\n      connectionId = _a.connectionId;\n\n  if (connectionId) {\n    if (typeof window !== 'undefined') {\n      window.localStorage.setItem(this._storageKey, connectionId);\n    }\n\n    this._connectionId = connectionId;\n  } // handle any errors from the server\n\n\n  if (status === 'error') {\n    if (reason.includes('not a valid API key')) {\n      var errorObj = new Error(reason);\n      throw errorObj;\n    }\n\n    if (reason.includes('network not supported')) {\n      var errorObj = new Error(reason);\n      throw errorObj;\n    }\n\n    if (reason.includes('maximum allowed amount')) {\n      var errorObj = new Error(reason);\n      throw errorObj;\n    }\n  }\n\n  if (event && event.transaction) {\n    var transaction_1 = event.transaction,\n        eventCode = event.eventCode,\n        contractCall = event.contractCall; // flatten in to one object\n\n    var newState_1 = __assign(__assign({}, transaction_1), {\n      eventCode: eventCode,\n      contractCall: contractCall\n    }); // ignore server echo and unsubscribe messages\n\n\n    if (serverEcho(eventCode) || transaction_1.status === 'unsubscribed') {\n      return;\n    } // handle change of hash in speedup and cancel events\n\n\n    if (eventCode === 'txSpeedUp' || eventCode === 'txCancel') {\n      this._watchedTransactions = this._watchedTransactions.map(function (tx) {\n        if (tx.hash === transaction_1.originalHash) {\n          // reassign hash parameter in transaction queue to new hash\n          tx.hash = transaction_1.hash;\n        }\n\n        return tx;\n      });\n    }\n\n    var watchedAddress_1 = transaction_1.watchedAddress && transaction_1.watchedAddress.toLowerCase();\n\n    if (watchedAddress_1) {\n      var accountObj = this._watchedAccounts.find(function (ac) {\n        return ac.address === watchedAddress_1;\n      });\n\n      var emitterResult_1 = accountObj ? last(accountObj.emitters.map(function (emitter) {\n        return emitter.emit(newState_1);\n      })) : false;\n\n      this._transactionHandlers.forEach(function (handler) {\n        return handler({\n          transaction: newState_1,\n          emitterResult: emitterResult_1\n        });\n      });\n    } else {\n      var transactionObj = this._watchedTransactions.find(function (tx) {\n        return tx.hash === transaction_1.hash;\n      });\n\n      var emitterResult_2 = transactionObj && transactionObj.emitter.emit(newState_1);\n\n      this._transactionHandlers.forEach(function (handler) {\n        return handler({\n          transaction: newState_1,\n          emitterResult: emitterResult_2\n        });\n      });\n    }\n  }\n}\n\nfunction createEventLog(msg) {\n  return JSON.stringify(__assign({\n    timeStamp: new Date(),\n    dappId: this._dappId,\n    version: version,\n    blockchain: {\n      system: 'ethereum',\n      network: networkName(this._networkId)\n    }\n  }, msg));\n}\n\nvar DEFAULT_NAME = 'unknown';\n\nvar Blocknative =\n/** @class */\nfunction () {\n  function Blocknative(options) {\n    validateOptions(options);\n    var dappId = options.dappId,\n        _a = options.name,\n        name = _a === void 0 ? DEFAULT_NAME : _a,\n        networkId = options.networkId,\n        _b = options.transactionHandlers,\n        transactionHandlers = _b === void 0 ? [] : _b,\n        apiUrl = options.apiUrl,\n        ws = options.ws;\n    var socket = new SturdyWebSocket(apiUrl || 'wss://api.blocknative.com/v0', ws ? {\n      wsConstructor: ws\n    } : {});\n    socket.onopen = onOpen.bind(this);\n    socket.ondown = onDown.bind(this);\n    socket.onreopen = onReopen.bind(this);\n    socket.onmessage = handleMessage.bind(this);\n    var storageKey = CryptoEs.SHA1(dappId + \" - \" + name).toString();\n    var storedConnectionId = typeof window !== 'undefined' && window.localStorage.getItem(storageKey);\n    this._storageKey = storageKey;\n    this._connectionId = storedConnectionId || undefined;\n    this._dappId = dappId;\n    this._networkId = networkId;\n    this._transactionHandlers = transactionHandlers;\n    this._socket = socket;\n    this._connected = false;\n    this._sendMessage = sendMessage.bind(this);\n    this._watchedTransactions = [];\n    this._watchedAccounts = []; // public API\n\n    this.transaction = transaction.bind(this);\n    this.account = account.bind(this);\n    this.event = event.bind(this);\n    this.unsubscribe = unsubscribe.bind(this);\n  }\n\n  return Blocknative;\n}();\n\nfunction onOpen() {\n  this._connected = true;\n\n  this._sendMessage({\n    categoryCode: 'initialize',\n    eventCode: 'checkDappId',\n    connectionId: this._connectionId\n  });\n}\n\nfunction onDown() {\n  this._connected = false;\n}\n\nfunction onReopen() {\n  var _this = this;\n\n  this._connected = true;\n\n  this._sendMessage({\n    categoryCode: 'initialize',\n    eventCode: 'checkDappId',\n    connectionId: this._connectionId\n  }); // re-register all accounts to be watched by server upon\n  // re-connection as they don't get transferred over automatically\n  // to the new connection like tx hashes do\n\n\n  this._watchedAccounts.forEach(function (account) {\n    _this._sendMessage({\n      eventCode: 'accountAddress',\n      categoryCode: 'watch',\n      account: {\n        address: account.address\n      }\n    });\n  });\n}\n\nexport default Blocknative;\n"]},"metadata":{},"sourceType":"module"}