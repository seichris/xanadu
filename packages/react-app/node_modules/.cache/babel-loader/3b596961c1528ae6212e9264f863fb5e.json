{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Documents\\\\Workspace\\\\xanadu-contracts\\\\scaffold-eth\\\\packages\\\\react-app\\\\src\\\\components\\\\AddressInput.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Blockie } from \".\";\nimport { Input } from 'antd';\nexport default function AddressInput(props) {\n  const [ens, setEns] = useState(0);\n  useEffect(() => {\n    setEns(\"\");\n\n    if (props.value && props.ensProvider) {\n      async function getEns() {\n        let newEns;\n\n        try {\n          console.log(\"trying reverse ens\", newEns);\n          newEns = await props.ensProvider.lookupAddress(props.value);\n          console.log(\"setting ens\", newEns);\n          setEns(newEns);\n        } catch (e) {}\n\n        console.log(\"checking resolve\");\n\n        if (props.value.indexOf(\".eth\") > 0 || props.value.indexOf(\".xyz\") > 0) {\n          try {\n            console.log(\"resolving\");\n            let possibleAddress = await props.ensProvider.resolveName(props.value);\n            console.log(\"GOT:L\", possibleAddress);\n\n            if (possibleAddress) {\n              setEns(props.value);\n              props.onChange(possibleAddress);\n            }\n          } catch (e) {}\n        }\n      }\n\n      getEns();\n    }\n  }, [props.value, props.ensProvider]);\n  return /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"address\",\n    prefix: /*#__PURE__*/React.createElement(Blockie, {\n      address: props.value,\n      size: 8,\n      scale: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    }),\n    value: ens ? ens : props.value,\n    onChange: async e => {\n      let address = e.target.value;\n\n      if (address.indexOf(\".eth\") > 0 || address.indexOf(\".xyz\") > 0) {\n        try {\n          let possibleAddress = await props.ensProvider.resolveName(address);\n\n          if (possibleAddress) {\n            address = possibleAddress;\n          }\n        } catch (e) {}\n      }\n\n      props.onChange(address);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/chris/Documents/Workspace/xanadu-contracts/scaffold-eth/packages/react-app/src/components/AddressInput.js"],"names":["React","useState","useEffect","Blockie","Input","AddressInput","props","ens","setEns","value","ensProvider","getEns","newEns","console","log","lookupAddress","e","indexOf","possibleAddress","resolveName","onChange","address","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAyB,GAAzB;AACA,SAASC,KAAT,QAAsB,MAAtB;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAE1C,QAAM,CAAEC,GAAF,EAAOC,MAAP,IAAkBP,QAAQ,CAAC,CAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZM,IAAAA,MAAM,CAAC,EAAD,CAAN;;AACA,QAAGF,KAAK,CAACG,KAAN,IAAeH,KAAK,CAACI,WAAxB,EAAoC;AAClC,qBAAeC,MAAf,GAAuB;AACrB,YAAIC,MAAJ;;AACA,YAAG;AACDC,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiCF,MAAjC;AAEAA,UAAAA,MAAM,GAAG,MAAMN,KAAK,CAACI,WAAN,CAAkBK,aAAlB,CAAgCT,KAAK,CAACG,KAAtC,CAAf;AACAI,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BF,MAA1B;AACAJ,UAAAA,MAAM,CAACI,MAAD,CAAN;AACD,SAND,CAMC,OAAMI,CAAN,EAAQ,CAAE;;AACXH,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;;AACA,YAAIR,KAAK,CAACG,KAAN,CAAYQ,OAAZ,CAAoB,MAApB,IAA4B,CAA5B,IAAiCX,KAAK,CAACG,KAAN,CAAYQ,OAAZ,CAAoB,MAApB,IAA4B,CAAjE,EAAoE;AAClE,cAAG;AACDJ,YAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,gBAAII,eAAe,GAAG,MAAMZ,KAAK,CAACI,WAAN,CAAkBS,WAAlB,CAA8Bb,KAAK,CAACG,KAApC,CAA5B;AACAI,YAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBI,eAApB;;AACA,gBAAGA,eAAH,EAAmB;AACjBV,cAAAA,MAAM,CAACF,KAAK,CAACG,KAAP,CAAN;AACAH,cAAAA,KAAK,CAACc,QAAN,CAAeF,eAAf;AACD;AACF,WARD,CAQC,OAAMF,CAAN,EAAQ,CAAE;AACZ;AACF;;AACDL,MAAAA,MAAM;AACP;AACF,GA3BQ,EA2BP,CAACL,KAAK,CAACG,KAAP,EAAcH,KAAK,CAACI,WAApB,CA3BO,CAAT;AA8BA,sBACE,oBAAC,KAAD;AACE,IAAA,WAAW,EAAC,SADd;AAEE,IAAA,MAAM,eAAE,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAEJ,KAAK,CAACG,KAAxB;AAA+B,MAAA,IAAI,EAAE,CAArC;AAAwC,MAAA,KAAK,EAAE,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFV;AAGE,IAAA,KAAK,EAAEF,GAAG,GAACA,GAAD,GAAKD,KAAK,CAACG,KAHvB;AAIE,IAAA,QAAQ,EAAE,MAAOO,CAAP,IAAW;AACnB,UAAIK,OAAO,GAAGL,CAAC,CAACM,MAAF,CAASb,KAAvB;;AACA,UAAIY,OAAO,CAACJ,OAAR,CAAgB,MAAhB,IAAwB,CAAxB,IAA6BI,OAAO,CAACJ,OAAR,CAAgB,MAAhB,IAAwB,CAAzD,EAA4D;AAC1D,YAAG;AACD,cAAIC,eAAe,GAAG,MAAMZ,KAAK,CAACI,WAAN,CAAkBS,WAAlB,CAA8BE,OAA9B,CAA5B;;AACA,cAAGH,eAAH,EAAmB;AACjBG,YAAAA,OAAO,GAAGH,eAAV;AACD;AACF,SALD,CAKC,OAAMF,CAAN,EAAQ,CAAE;AACZ;;AACDV,MAAAA,KAAK,CAACc,QAAN,CAAeC,OAAf;AACD,KAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAmBD","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Blockie }  from \".\"\r\nimport { Input } from 'antd';\r\n\r\nexport default function AddressInput(props) {\r\n\r\n  const [ ens, setEns ] = useState(0)\r\n\r\n  useEffect(()=>{\r\n    setEns(\"\")\r\n    if(props.value && props.ensProvider){\r\n      async function getEns(){\r\n        let newEns\r\n        try{\r\n          console.log(\"trying reverse ens\",newEns)\r\n\r\n          newEns = await props.ensProvider.lookupAddress(props.value)\r\n          console.log(\"setting ens\",newEns)\r\n          setEns(newEns)\r\n        }catch(e){}\r\n        console.log(\"checking resolve\")\r\n        if( props.value.indexOf(\".eth\")>0 || props.value.indexOf(\".xyz\")>0 ){\r\n          try{\r\n            console.log(\"resolving\")\r\n            let possibleAddress = await props.ensProvider.resolveName(props.value);\r\n            console.log(\"GOT:L\",possibleAddress)\r\n            if(possibleAddress){\r\n              setEns(props.value)\r\n              props.onChange(possibleAddress)\r\n            }\r\n          }catch(e){}\r\n        }\r\n      }\r\n      getEns()\r\n    }\r\n  },[props.value, props.ensProvider])\r\n\r\n\r\n  return (\r\n    <Input\r\n      placeholder=\"address\"\r\n      prefix={<Blockie address={props.value} size={8} scale={3}/>}\r\n      value={ens?ens:props.value}\r\n      onChange={async (e)=>{\r\n        let address = e.target.value\r\n        if( address.indexOf(\".eth\")>0 || address.indexOf(\".xyz\")>0 ){\r\n          try{\r\n            let possibleAddress = await props.ensProvider.resolveName(address);\r\n            if(possibleAddress){\r\n              address = possibleAddress\r\n            }\r\n          }catch(e){}\r\n        }\r\n        props.onChange(address)\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}